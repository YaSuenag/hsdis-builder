name: Publish container image

on:
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: publish
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

      - name: Retrieve older images which should be removed
        id: remove-images
        run: |
          $image_lower = "${{ env.IMAGE_NAME }}".ToLower()
          $repo = $image_lower.Split('/')[1]

          # Retrieve information of all of container images
          $versions = gh api user/packages/container/$repo/versions | ConvertFrom-Json

          # Pick up digest of "latest" image
          $latest_sha = $versions |
              Where-Object {$_.metadata.container.tags.Contains("latest")} |
              Select-Object -ExpandProperty name -First 1

          $shas = New-Object System.Collections.Generic.HashSet[string]
          [void]$shas.Add($latest_sha)

          # Retrieve information of children of latest image
          docker manifest inspect ${{ env.REGISTRY }}/$image_lower@$latest_sha |
              Out-String |
              ConvertFrom-Json |
              Select-Object -ExpandProperty "manifests" |
              ForEach-Object {[void]$shas.Add($_.digest)}

          # Retrieve IDs to be removed
          $ids = $versions |
              Where-Object {!$shas.Contains($_.name)} |
              Select-Object -ExpandProperty id

          $remove_images = $ids -join ","
          "REMOVE_IMAGES=$remove_images" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Delete old latest blobs
        uses: actions/delete-package-versions@v4
        with:
          package-name: hsdis-builder
          package-type: container
          package-version-ids: ${{ steps.remove-images.outputs.REMOVE_IMAGES }}
